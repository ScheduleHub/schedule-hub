{"version":3,"sources":["components/CourseItem/index.jsx","welcome_page/index.jsx","index.jsx","welcome_page/icon.png"],"names":["CourseItem","props","onMouseEnter","setState","isHovered","onMouseLeave","onKeepChange","checked","console","log","keep","courseCode","keepable","onDropClick","state","style","this","visibility","onClick","onMouseOver","onMouseOut","verticalAlign","textAlign","Button","size","variant","className","React","Component","apiKey","WelcomePage","loadCourseInfo","courseNames","a","async","allUrl","map","str","split","sub","cata","Promise","all","url","axios","get","params","key","then","values","courseInfo","value","data","parseCourses","rawCourses","filter","test","match","x","substring","length","currentCourses","item","showModal","modalShow","hideModal","dropCourse","newCurrentCourses","newCourseInfo","subject","catalog_number","render","loadSubjects","response","allSubjects","loadCourseNumbers","courseNumbers","updateRawCourses","handleAddClick","subjectBox","courseNumberBox","meta","status","alert","slice","push","handleViewScheduleClick","grouped","course","_","groupBy","s","section","finalGrouped","i","rearranged","p","other","t","matched","associated_class","classNumber","concat","courses_info","filtered_courses","showAlert","src","logo","alt","CardDeck","Card","border","Header","as","Body","Text","Img","Form","Group","Control","rows","onChange","e","target","block","Modal","show","onHide","CardGroup","overflowY","Table","hover","Autocomplete","id","options","renderInput","TextField","label","fullWidth","onSelect","toUpperCase","getOptionLabel","option","margin","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5296f429.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass CourseItem extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      courseCode, keepable, keep, onDropClick,\n    } = props;\n    this.courseCode = courseCode;\n    this.keepable = keepable;\n    this.keep = keep;\n    this.onDropClick = onDropClick;\n    this.state = {\n      isHovered: false,\n    };\n  }\n\n  onMouseEnter = () => {\n    this.setState({\n      isHovered: true,\n    });\n  }\n\n  onMouseLeave = () => {\n    this.setState({\n      isHovered: false,\n    });\n  }\n\n  onKeepChange = (checked) => {\n    console.log(checked);\n    this.setState({ keep: checked });\n  }\n\n  render() {\n    const { isHovered } = this.state;\n    const style = isHovered ? {} : { visibility: 'hidden' };\n    return (\n      <tr\n        onClick={this.onClick}\n        onMouseOver={this.onMouseEnter}\n        onMouseOut={this.onMouseLeave}\n      >\n        <td style={{ verticalAlign: 'middle' }}>{this.courseCode}</td>\n        {/* <td className=\"KeepColumn\">\n          <Form.Check\n            custom\n            type=\"checkbox\"\n            id={`checkbox-keep-${this.courseCode}`}\n            label=\"\"\n            disabled={!this.keepable}\n            style={{ verticalAlign: 'middle' }}\n            onChange={(e) => this.onKeepChange(e.target.checked)}\n          />\n        </td> */}\n        <td style={{ textAlign: 'right' }}>\n          <Button size=\"sm\" variant=\"outline-danger\" style={style} className=\"DropButton\" onClick={this.onDropClick}>âœ•</Button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default CourseItem;\n","import React from 'react';\nimport {\n  Button, CardDeck, Card, Form, Modal, CardGroup, Table, Col, Alert,\n} from 'react-bootstrap';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport _ from 'lodash';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CourseItem from '../components/CourseItem';\nimport './index.css';\nimport logo from './icon.png';\n\nconst apiKey = '4ad350333dc3859b91bcf443d14e4bf0';\n\nclass WelcomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n      currentCourses: [],\n      allSubjects: [],\n      courseNumbers: [],\n      subjectBox: '',\n      courseNumberBox: '',\n      showAlert: false,\n      rawCourses: '',\n      courseInfo: [],\n    };\n  }\n\n  componentDidMount() {\n    console.log('mounted');\n    this.loadSubjects();\n  }\n\n  loadCourseInfo = async (courseNames) => {\n    const allUrl = courseNames.map((str) => {\n      const [sub, cata] = str.split(' ');\n      return `https://api.uwaterloo.ca/v2/courses/${sub}/${cata}/schedule.json`;\n    });\n    Promise.all(allUrl.map((url) => axios.get(url, {\n      params: {\n        key: apiKey,\n      },\n    }))).then((values) => {\n      const courseInfo = values.map((value) => value.data.data);\n      console.log(courseInfo);\n      this.setState({ courseInfo });\n    });\n  }\n\n  parseCourses = (rawCourses) => {\n    const lines = rawCourses.split('\\n').filter((str) => /^[0-9]{4}$/.test(str));\n    const courseNames = rawCourses.match(/[A-Z]{2,6} \\d{1,3}[A-Z]? - /g).map((x) => x.substring(0, x.length - 3));\n\n    this.setState({\n      currentCourses: courseNames.map(\n        (item) => ({ courseCode: item, keepable: true, keep: true }),\n      ),\n    });\n    console.log(courseNames);\n    this.loadCourseInfo(courseNames);\n  }\n\n  showModal = () => {\n    const { rawCourses } = this.state;\n    this.setState({\n      modalShow: true,\n    });\n    this.parseCourses(rawCourses);\n  }\n\n  hideModal = () => {\n    this.setState({\n      modalShow: false,\n    });\n  }\n\n  dropCourse = (courseCode) => {\n    const { currentCourses, courseInfo } = this.state;\n    const newCurrentCourses = currentCourses.filter((item) => item.courseCode !== courseCode);\n    const newCourseInfo = courseInfo.filter((item) => {\n      const { subject, catalog_number } = item[0];\n      return `${subject} ${catalog_number}` !== courseCode;\n    });\n    this.setState({\n      currentCourses: newCurrentCourses,\n      courseInfo: newCourseInfo,\n    });\n    this.render();\n  }\n\n  loadSubjects = async () => {\n    const url = 'https://api.uwaterloo.ca/v2/codes/subjects.json';\n    const response = await axios.get(url, {\n      params: {\n        key: apiKey,\n      },\n    });\n    const allSubjects = response.data.data.map((item) => item.subject);\n    this.setState({\n      allSubjects,\n    });\n  }\n\n  loadCourseNumbers = async (subject) => {\n    if (!subject) return;\n    const url = `https://api.uwaterloo.ca/v2/courses/${subject}.json`;\n    const response = await axios.get(url, {\n      params: {\n        key: apiKey,\n      },\n    });\n    const courseNumbers = response.data.data.map((item) => item.catalog_number);\n    this.setState({\n      courseNumbers,\n    });\n  }\n\n  updateRawCourses = (rawCourses) => {\n    this.setState({ rawCourses });\n  }\n\n  handleAddClick = async () => {\n    const {\n      subjectBox, courseNumberBox, currentCourses, courseInfo,\n    } = this.state;\n    const url = `https://api.uwaterloo.ca/v2/courses/${subjectBox}/${courseNumberBox}/schedule.json`;\n    const response = await axios.get(url, {\n      params: {\n        key: apiKey,\n      },\n    });\n    const courseCode = `${subjectBox} ${courseNumberBox}`;\n    if (response.data.meta.status !== 200) {\n      // this.setState({\n      //   showAlert: true,\n      // });\n      alert(`The course ${courseCode} is unavailable for this term.`);\n      return;\n    }\n\n    const newCurrentCourses = currentCourses.slice();\n    if (newCurrentCourses.filter((item) => courseCode === item.courseCode).length) {\n      return;\n    }\n    newCurrentCourses.push({\n      courseCode,\n      keepable: false,\n    });\n    const newCourseInfo = courseInfo.slice();\n    newCourseInfo.push(response.data.data);\n    this.setState({\n      currentCourses: newCurrentCourses,\n      courseInfo: newCourseInfo,\n    });\n  }\n\n  handleViewScheduleClick = () => {\n    const { currentCourses, courseInfo } = this.state;\n    const filtered_courses = [];\n    console.log(courseInfo);\n    const grouped = courseInfo.map((/** @type {[]} */ course) => _.groupBy(course, (s) => s.section[4]));\n    const finalGrouped = [];\n    for (let i = 0; i < grouped.length; ++i) {\n      const course = [];\n      for (const key in grouped[i]) {\n        course.push(grouped[i][key]);\n      }\n      const primary = course[0];\n      const rearranged = primary.map((p) => {\n        // for (let i = 1; i < grouped.length; ++i) {\n\n        // }\n        const other = course.slice(1).map((t) => {\n          let matched = t.filter((s) => s.associated_class === p.associated_class);\n          if (!matched.length) {\n            matched = t.filter((s) => s.associated_class === 99);\n          }\n          return matched.map((s) => s.classNumber);\n        });\n        return [[p]].concat(other);\n      });\n      finalGrouped.push(rearranged);\n    }\n    console.log(finalGrouped);\n\n    const data = {\n      courses_info: courseInfo,\n      filtered_courses,\n    };\n    console.log(data);\n  }\n\n\n  render() {\n    const {\n      modalShow, currentCourses, allSubjects, courseNumbers, showAlert, subjectBox, courseNumberBox,\n    } = this.state;\n    return (\n      <div className=\"WelcomePage\">\n        <img src={logo} alt=\"Logo\" className=\"Logo\" />\n        <CardDeck className=\"StepsDeck\">\n          <Card className=\"Card\" border=\"primary\">\n            <Card.Header as=\"h5\">Step 1</Card.Header>\n            <Card.Body>\n              <Card.Text>Go to Quest and click \"Class Schedule\".</Card.Text>\n              <Card.Img src=\"https://uwflow.com/static/img/import-schedule/step-1.png\" />\n            </Card.Body>\n          </Card>\n          <Card className=\"Card\">\n            <Card.Header as=\"h5\">Step 2</Card.Header>\n            <Card.Body>\n              <Card.Text>Choose your term, then select all and copy.</Card.Text>\n              <Card.Img src=\"https://uwflow.com/static/img/import-schedule/step-2.png\" />\n            </Card.Body>\n          </Card>\n          <Card className=\"Card\">\n            <Card.Header as=\"h5\">Step 3</Card.Header>\n            <Card.Body>\n              <Card.Text>Paste into the box below.</Card.Text>\n              <Form>\n                <Form.Group>\n                  <Form.Control as=\"textarea\" className=\"PasteBox\" rows=\"15\" onChange={(e) => this.updateRawCourses(e.target.value)} />\n                </Form.Group>\n                <Button block onClick={this.showModal}>Next</Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n        <Modal size=\"lg\" show={modalShow} onHide={this.hideModal}>\n          <CardGroup>\n            <Card className=\"CourseEditCard\" style={{ overflowY: 'scroll' }}>\n              <Table hover>\n                <thead>\n                  <tr>\n                    <th>Course</th>\n                    {/* <th className=\"KeepColumn\">Keep unchanged?</th> */}\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    currentCourses.map((item) => {\n                      const { courseCode, keepable, keep } = item;\n                      return (\n                        <CourseItem\n                          key={courseCode}\n                          courseCode={courseCode}\n                          keepable={keepable}\n                          keep={keep}\n                          onDropClick={() => this.dropCourse(courseCode)}\n                        />\n                      );\n                    })\n                  }\n                </tbody>\n              </Table>\n            </Card>\n            <Card className=\"CourseEditCard\">\n              <Autocomplete\n                className=\"AutoCompleteInput\"\n                id=\"subjectBox\"\n                options={allSubjects}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Subject\" variant=\"outlined\" fullWidth />\n                )}\n                fullWidth\n                onSelect={(e) => {\n                  this.loadCourseNumbers(e.target.value);\n                  this.setState({\n                    subjectBox: e.target.value.toUpperCase(),\n                  });\n                }}\n              />\n              <Autocomplete\n                className=\"AutoCompleteInput\"\n                id=\"courseNumberBox\"\n                options={courseNumbers}\n                getOptionLabel={(option) => option}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Course number\" variant=\"outlined\" fullWidth />\n                )}\n                onSelect={(e) => this.setState({\n                  courseNumberBox: e.target.value,\n                })}\n              />\n              <Button onClick={this.handleAddClick} style={{ margin: '16px' }}>Add</Button>\n              {/* <Alert show={showAlert} variant=\"warning\">\n                <Alert.Heading>Warning</Alert.Heading>\n                <p>\n              The course\n                  <strong>{` ${subjectBox} ${courseNumberBox} `}</strong>\n              is unavailable this term.\n                </p>\n                <hr />\n                <div className=\"d-flex justify-content-end\">\n                  <Button onClick={() => this.setState({ showAlert: false })} variant=\"outline-warning\">OK</Button>\n                </div>\n              </Alert> */}\n            </Card>\n          </CardGroup>\n          <Button style={{ margin: '16px' }} onClick={this.handleViewScheduleClick}>View Recommended Schedules</Button>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default WelcomePage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WelcomePage from './welcome_page/index';\n\nReactDOM.render(<WelcomePage />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/icon.74dd330e.png\";"],"sourceRoot":""}