{"version":3,"sources":["components/CourseItem/index.jsx","utils/courses.js","welcome_page/index.jsx","index.jsx","res/icon.svg","res/calendar-step-1.png","res/calendar-step-2.png"],"names":["CourseItem","props","courseCode","keepable","keep","onDropClick","ListItem","ListItemText","primary","ListItemSecondaryAction","Hidden","xsUp","Tooltip","title","IconButton","aria-label","disabled","Lock","LockOpen","onClick","Close","getCourseCode","classInfo","subject","catalog_number","apiKey","theme","createMuiTheme","breakpoints","values","xs","sm","md","lg","xl","palette","main","blue","light","dark","WelcomePage","isValidSchedule","courseInfo","classNumbers","completeClassNumbers","_","flatten","map","obj","class_number","every","number","includes","loadCourseInfo","courseNames","a","async","instance","axios","create","baseURL","timeout","promises","str","split","sub","cata","get","params","key","setState","fullPageOverlayOpen","all","then","value","data","currentCourses","item","currentClasses","modalShow","showScheduleInvalidAlert","catch","error","message","showSnackbar","finally","parseCourses","rawCourses","match","x","substring","length","parseInt","showCourseUnavailAlert","state","subjectBox","courseNumberBox","hideSnackbar","event","reason","snackbarOpen","showModal","hideModal","courseNumbers","snackbarTheme","snackbarText","dropCourse","newCurrentCourses","filter","newCourseInfo","render","loadSubjects","response","allSubjects","loadCourseNumbers","url","handleRawCoursesInputChange","handleAddClick","meta","status","slice","push","handleViewScheduleClick","currentCoursesDict","keyBy","filteredCourseInfo","course","filtered","s","classes","some","date","is_closed","campus","isOnline","section","uniqWith","b","associated_class","i","isEqual","grouped","dict","groupBy","groupedSectionList","forEach","courses_info","filtered_courses","other","primarySection","allowedComponents","component","allowedSections","classInfo2","isEmpty","concat","formatPostData","console","log","handlePaste","pasteText","courseNumberBoxRef","React","createRef","this","ThemeProvider","CssBaseline","Snackbar","open","onClose","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","severity","src","logo","alt","className","Container","maxWidth","Grid","container","justify","spacing","Card","raised","CardHeader","CardContent","Typography","variant","Link","href","target","CardMedia","image","step1","style","display","flexDirection","height","step2","flexGrow","paddingBottom","Box","mb","TextField","onPaste","e","clipboardData","getData","multiline","required","fullWidth","rows","onChange","InputProps","inputProps","Modal","alignItems","justifyContent","BackdropComponent","Backdrop","BackdropProps","closeAfterTransition","Fade","in","Paper","width","outline","p","List","overflowY","Autocomplete","id","options","renderInput","label","_event","toUpperCase","current","focus","getOptionLabel","option","inputRef","ml","Button","color","Divider","size","zIndex","drawer","CircularProgress","Component","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c0861823.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItem, ListItemText, ListItemSecondaryAction, IconButton, Tooltip, Hidden,\n} from '@material-ui/core';\nimport { Close, Lock, LockOpen } from '@material-ui/icons';\n\nfunction CourseItem(props) {\n  const {\n    courseCode, keepable, keep, onDropClick,\n  } = props;\n\n  return (\n    <ListItem>\n      <ListItemText primary={courseCode} />\n      <ListItemSecondaryAction>\n        {/* TODO: Keep toggle */}\n        <Hidden xsUp={!keepable}>\n          <Tooltip\n            title={keep\n              ? 'This course will be kept unchanged in the schedule.'\n              : 'This course is allowed to be changed'}\n          >\n            <span>\n              <IconButton aria-label=\"keep unchanged\" disabled={!keepable || true}>\n                {/* Remove || true when implementing keepable */}\n                {keep ? <Lock /> : <LockOpen />}\n              </IconButton>\n            </span>\n          </Tooltip>\n        </Hidden>\n        <Tooltip title=\"Drop this course\">\n          <IconButton aria-label=\"drop\" onClick={onDropClick}>\n            <Close />\n          </IconButton>\n        </Tooltip>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nCourseItem.propTypes = {\n  courseCode: PropTypes.string.isRequired,\n  keepable: PropTypes.bool.isRequired,\n  keep: PropTypes.bool.isRequired,\n  onDropClick: PropTypes.func.isRequired,\n};\n\nexport default CourseItem;\n","import _ from 'lodash';\n\n/**\n * @typedef {{ courseCode: string, keepable: boolean, keep: boolean }} CurrentCourse\n */\n\n/**\n * @typedef {Object} ClassInfo\n * @property {string} subject\n * @property {number} catalog_number\n * @property {number} class_number\n * @property {number} associated_class\n * @property {string} section\n * @property {string} campus\n * @property {ClassTimeInfo[]} classes\n */\n\n/**\n * @typedef {Object} ClassTimeInfo\n * @property {ClassDate} date\n * @property {{building: string, room: string}} location\n * @property {string[]} instructors\n*/\n\n/**\n * @typedef {Object} ClassDate\n * @property {string} start_time\n * @property {string} end_time\n * @property {string} weekdays\n * @property {boolean} is_tba\n * @property {boolean} is_cancelled\n * @property {boolean} is_closed\n */\n\n/**\n * Determines whether two classes are associated.\n * @param {ClassInfo} classInfo1 the ClassInfo object to compare.\n * @param {ClassInfo} classInfo2 the other ClassInfo object to compare.\n */\nconst areAssociated = (classInfo1, classInfo2) => (\n  classInfo1.associated_class === classInfo2.associated_class\n);\n\n/**\n * Returns the course code of a class.\n * @param {ClassInfo} classInfo the ClassInfo object to get course code from.\n */\nconst getCourseCode = (classInfo) => `${classInfo.subject} ${classInfo.catalog_number}`;\n\n/**\n * Determines whether a class in online or not.\n * @param {ClassInfo} classInfo the ClassInfo object to check.\n */\nconst isOnline = (classInfo) => classInfo.campus === 'ONLN ONLINE';\n\n/**\n * Determines whether a class in closed or not.\n * @param {ClassInfo} classInfo the ClassInfo object to check.\n */\nconst isClosed = (classInfo) => classInfo.classes.some((value) => value.date.is_closed);\n\n/**\n * Formats data for use in back-end.\n * @param {CurrentCourse[]} currentCourses the list of current courses.\n * @param {number[]} currentClasses the list of current class numbers.\n * @param {ClassInfo[][]} courseInfo the courses information obtained from API.\n */\nconst formatPostData = (currentCourses, currentClasses, courseInfo) => {\n  const currentCoursesDict = _.keyBy(currentCourses, 'courseCode');\n\n  const filteredCourseInfo = courseInfo.map((course) => {\n    let filtered = course.filter((s) => !isClosed(s) && !isOnline(s));\n    const keepUnchanged = currentCoursesDict[getCourseCode(course[0])].keep;\n    if (keepUnchanged) {\n      filtered = filtered.filter((section) => currentClasses.includes(section.class_number));\n    }\n    const filteredSet = _.uniqWith(filtered, (a, b) => {\n      if (a.associated_class !== b.associated_class) {\n        return false;\n      }\n      if (a.section.slice(0, 3) !== b.section.slice(0, 3)) {\n        return false;\n      }\n      if (a.classes.length !== b.classes.length) {\n        return false;\n      }\n      for (let i = 0; i < a.classes.length; i += 1) {\n        if (!_.isEqual(a.classes[i].date, b.classes[i].date)) {\n          return false;\n        }\n      }\n      return true;\n    });\n    return filteredSet;\n  });\n\n  const grouped = filteredCourseInfo.map((course) => {\n    const dict = _.groupBy(course, (s) => s.section[4]);\n    const groupedSectionList = [];\n    _.forEach(dict, (value, key) => {\n      groupedSectionList[key] = value;\n    });\n    return groupedSectionList;\n  });\n\n  const associatedClassList = grouped.map((course) => {\n    const primary = course[0];\n    const other = course.slice(1);\n    const rearranged = primary.map((primarySection) => {\n      const allowedComponents = other.map((component) => {\n        let allowedSections = component.filter(\n          (section) => areAssociated(primarySection, section),\n        );\n        if (_.isEmpty(allowedSections)) {\n          allowedSections = component.filter((section) => section.associated_class === 99);\n        }\n        return _.map(allowedSections, 'class_number');\n      });\n      return [[primarySection.class_number]].concat(allowedComponents);\n    });\n    return rearranged;\n  });\n\n  return {\n    courses_info: filteredCourseInfo,\n    filtered_courses: associatedClassList,\n  };\n};\n\nexport {\n  areAssociated,\n  getCourseCode,\n  formatPostData,\n};\n","import React from 'react';\nimport {\n  Button, TextField, Typography, Grid, Modal, Link, List,\n  Card, CardContent, CardHeader, CardMedia, Paper, CssBaseline,\n  Divider, Snackbar, Fade, Backdrop, createMuiTheme, ThemeProvider,\n  Box, CircularProgress, Container,\n} from '@material-ui/core';\nimport { Autocomplete, Alert } from '@material-ui/lab';\nimport { blue } from '@material-ui/core/colors';\nimport axios from 'axios';\nimport CourseItem from 'components/CourseItem';\nimport './index.css';\nimport { getCourseCode, formatPostData } from 'utils/courses';\nimport logo from 'res/icon.svg';\nimport step1 from 'res/calendar-step-1.png';\nimport step2 from 'res/calendar-step-2.png';\nimport _ from 'lodash';\n\nconst apiKey = '4ad350333dc3859b91bcf443d14e4bf0';\n\nconst theme = createMuiTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 1152,\n      lg: 1440,\n      xl: 1920,\n    },\n  },\n  palette: {\n    primary: {\n      main: blue[500],\n      light: '#6ec6ff',\n      dark: '#0069c0',\n    },\n  },\n});\n\n// const useStyles = makeStyles((theme) => ({\n//   screenshot: {\n//     height: 300,\n//   },\n// }));\n\nclass WelcomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalShow: false,\n      currentCourses: [],\n      currentClasses: [],\n      allSubjects: [],\n      courseNumbers: [],\n      subjectBox: '',\n      courseNumberBox: '',\n      rawCourses: '',\n      courseInfo: [],\n      snackbarOpen: false,\n      snackbarTheme: '',\n      snackbarText: '',\n      fullPageOverlayOpen: false,\n    };\n    this.courseNumberBoxRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.loadSubjects();\n  }\n\n  isValidSchedule = (courseInfo, classNumbers) => {\n    const completeClassNumbers = _.flatten(courseInfo).map((obj) => obj.class_number);\n    return classNumbers.every((number) => completeClassNumbers.includes(number));\n  }\n\n  loadCourseInfo = async (courseNames, classNumbers) => {\n    const timeout = 6000;\n    const instance = axios.create({\n      baseURL: 'https://api.uwaterloo.ca/v2/courses',\n      timeout,\n    });\n    const promises = courseNames.map((str) => {\n      const [sub, cata] = str.split(' ');\n      return instance.get(`/${sub}/${cata}/schedule.json`, {\n        params: {\n          key: apiKey,\n        },\n      });\n    });\n    this.setState({ fullPageOverlayOpen: true });\n    axios.all(promises).then((values) => {\n      const courseInfo = values.map((value) => value.data.data);\n      if (this.isValidSchedule(courseInfo, classNumbers)) {\n        this.setState({\n          courseInfo,\n          currentCourses: courseNames.map(\n            (item) => ({ courseCode: item, keepable: true, keep: true }),\n          ),\n          currentClasses: classNumbers,\n          modalShow: true,\n        });\n      } else {\n        this.showScheduleInvalidAlert();\n      }\n    }).catch((error) => {\n      if (error.message === `timeout of ${timeout}ms exceeded`) {\n        this.showSnackbar('error', 'Network Timeout');\n      } else {\n        this.showSnackbar('error', error.message);\n      }\n    }).finally(() => {\n      this.setState({ fullPageOverlayOpen: false });\n    });\n  }\n\n  parseCourses = (rawCourses) => {\n    const classNumbers = rawCourses.match(/^\\d{4}$/gm);\n    const courseNames = rawCourses.match(/[A-Z]{2,6} \\d{1,3}[A-Z]? - /g).map((x) => x.substring(0, x.length - 3));\n    if (rawCourses.match(/^\\d{3}$/gm).length !== classNumbers.length || rawCourses.match(/^0\\d{2}$/gm).length !== courseNames.length) {\n      this.showScheduleInvalidAlert();\n      return;\n    }\n    this.loadCourseInfo(courseNames, classNumbers.map((item) => parseInt(item, 10)));\n  }\n\n  showScheduleInvalidAlert = () => this.showSnackbar('warning', 'Your course info cannot be read.\\nPlease make sure it\\'s correct and try again.');\n\n  showCourseUnavailAlert = () => {\n    const { subjectBox, courseNumberBox } = this.state;\n    this.showSnackbar('warning', `${subjectBox} ${courseNumberBox} is unavailable for this term.`);\n  }\n\n  hideSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ snackbarOpen: false });\n  }\n\n  showModal = (rawCourses) => {\n    try {\n      this.parseCourses(rawCourses);\n    } catch (error) {\n      this.showScheduleInvalidAlert();\n    }\n  }\n\n  hideModal = () => {\n    this.setState({\n      modalShow: false,\n      subjectBox: '',\n      courseNumberBox: '',\n      courseNumbers: [],\n      rawCourses: '',\n    });\n  }\n\n  showSnackbar = (snackbarTheme, snackbarText) => {\n    this.setState({\n      snackbarTheme, snackbarText, snackbarOpen: true, rawCourses: '',\n    });\n  }\n\n  hideSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ snackbarOpen: false });\n  }\n\n  dropCourse = (courseCode) => {\n    const { currentCourses, courseInfo } = this.state;\n    const newCurrentCourses = currentCourses.filter((item) => item.courseCode !== courseCode);\n    const newCourseInfo = courseInfo.filter((item) => getCourseCode(item[0]) !== courseCode);\n    this.setState({\n      currentCourses: newCurrentCourses,\n      courseInfo: newCourseInfo,\n    });\n    this.render();\n  }\n\n  loadSubjects = async () => {\n    const url = 'https://api.uwaterloo.ca/v2/codes/subjects.json';\n    const response = await axios.get(url, {\n      params: {\n        key: apiKey,\n      },\n    });\n    const allSubjects = response.data.data.map((item) => item.subject);\n    this.setState({\n      allSubjects,\n    });\n  }\n\n  loadCourseNumbers = async (subject) => {\n    if (!subject) {\n      this.setState({ courseNumbers: [] });\n      return;\n    }\n    const url = `https://api.uwaterloo.ca/v2/courses/${subject}.json`;\n    const response = await axios.get(url, {\n      params: {\n        key: apiKey,\n      },\n    });\n    const courseNumbers = response.data.data.map((item) => item.catalog_number);\n    this.setState({\n      courseNumbers,\n    });\n  }\n\n  handleRawCoursesInputChange = (rawCourses) => {\n    this.setState({ rawCourses });\n  }\n\n  handleAddClick = async () => {\n    const {\n      subjectBox, courseNumberBox, currentCourses, courseInfo,\n    } = this.state;\n    if (!subjectBox || !courseNumberBox) {\n      return;\n    }\n    const url = `https://api.uwaterloo.ca/v2/courses/${subjectBox}/${courseNumberBox}/schedule.json`;\n    const response = await axios.get(url, {\n      params: {\n        key: apiKey,\n      },\n    });\n    const courseCode = `${subjectBox} ${courseNumberBox}`;\n    if (response.data.meta.status !== 200) {\n      this.showCourseUnavailAlert();\n      return;\n    }\n\n    const newCurrentCourses = currentCourses.slice();\n    if (newCurrentCourses.filter((item) => courseCode === item.courseCode).length) {\n      return;\n    }\n    newCurrentCourses.push({\n      courseCode,\n      keepable: false,\n      keep: false,\n    });\n    const newCourseInfo = courseInfo.slice();\n    newCourseInfo.push(response.data.data);\n    this.setState({\n      currentCourses: newCurrentCourses,\n      courseInfo: newCourseInfo,\n    });\n  }\n\n  handleViewScheduleClick = () => {\n    const { currentCourses, currentClasses, courseInfo } = this.state;\n    const data = formatPostData(currentCourses, currentClasses, courseInfo);\n    // eslint-disable-next-line no-console\n    console.log(data);\n  }\n\n  handlePaste = (pasteText) => {\n    try {\n      this.hideSnackbar();\n      this.setState({ rawCourses: pasteText });\n      this.showModal(pasteText);\n    } catch (error) {\n      this.showSnackbar('error', error.message);\n    }\n  }\n\n  render() {\n    const {\n      modalShow, currentCourses, allSubjects, courseNumbers,\n      subjectBox, courseNumberBox, fullPageOverlayOpen,\n      rawCourses, snackbarTheme, snackbarOpen, snackbarText,\n    } = this.state;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Snackbar\n          open={snackbarOpen}\n          onClose={this.hideSnackbar}\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          autoHideDuration={3000}\n        >\n          <Alert severity={snackbarTheme} onClose={this.hideSnackbar}>\n            {snackbarText}\n          </Alert>\n        </Snackbar>\n        <img src={logo} alt=\"Logo\" className=\"logo\" />\n\n        <Container maxWidth=\"lg\">\n          <Grid container justify=\"center\" spacing={4}>\n            {/* TODO: change spacing to 6 for md and higher */}\n            <Grid item xs={12} md>\n              <Card className=\"card\" raised>\n                <CardHeader title=\"Step 1\" className=\"header\" />\n                <CardContent>\n                  <Typography variant=\"body1\">\n                      Go to&nbsp;\n                    <Link href=\"https://quest.pecs.uwaterloo.ca/psp/SS/ACADEMIC/SA/?cmd=login&languageCd=ENG\" target=\"_blank\">Quest</Link>\n                      &nbsp;and click &quot;Class Schedule&quot;.\n                  </Typography>\n                </CardContent>\n                <CardMedia\n                  image={step1}\n                  title=\"Go to Class Schedule\"\n                  className=\"step-img\"\n                />\n              </Card>\n            </Grid>\n            <Grid item xs={12} md>\n              <Card className=\"card\" raised style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n                <CardHeader title=\"Step 2\" className=\"header\" />\n                <CardContent>\n                  <Typography variant=\"body1\">Choose your term, select all and copy.</Typography>\n                </CardContent>\n                <CardMedia\n                  image={step2}\n                  title=\"Select All and Copy\"\n                  className=\"step-img stick-bottom\"\n                />\n              </Card>\n            </Grid>\n            <Grid item xs={12} md>\n              <Card raised style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n                <CardHeader title=\"Step 3\" className=\"header\" />\n                <CardContent style={{\n                  display: 'flex', flexDirection: 'column', flexGrow: 1, paddingBottom: '16px',\n                }}\n                >\n                  <Box mb={2}>\n                    <Typography variant=\"body1\">Paste into the box below.</Typography>\n                  </Box>\n                  <TextField\n                    style={{ flexGrow: 1 }}\n                    value={rawCourses}\n                    onPaste={(e) => this.handlePaste(e.clipboardData.getData('text/plain'))}\n                    multiline\n                    required\n                    variant=\"outlined\"\n                    fullWidth\n                    rows={12}\n                    onChange={(e) => this.handleRawCoursesInputChange(e.target.value)}\n                    InputProps={{\n                      style: { height: '100%' },\n                    }}\n                      // eslint-disable-next-line react/jsx-no-duplicate-props\n                    inputProps={{\n                      style: { height: '100%' },\n                    }}\n                  />\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n\n        <Modal\n          open={modalShow}\n          onClose={this.hideModal}\n          className=\"flex-container\"\n          style={{ alignItems: 'center', justifyContent: 'center' }}\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n          closeAfterTransition\n        >\n          <Fade in={modalShow}>\n            <Paper style={{ width: 800, outline: 'none' }}>\n              <Box p={2} className=\"header\">\n                <Typography variant=\"h5\">Edit my courses</Typography>\n              </Box>\n              <Grid container>\n                <Grid item xs={12} sm>\n                  <List style={{ overflowY: 'scroll', height: 360 }}>\n                    {currentCourses.map((item) => {\n                      const { courseCode, keepable, keep } = item;\n                      return (\n                        <CourseItem\n                          key={courseCode}\n                          courseCode={courseCode}\n                          keepable={keepable}\n                          keep={keep}\n                          onDropClick={() => this.dropCourse(courseCode)}\n                        />\n                      );\n                    })}\n                  </List>\n                </Grid>\n                <Grid item xs={12} sm>\n                  <Box p={2}>\n                    <Autocomplete\n                      className=\"margin-bottom-16\"\n                      id=\"subjectBox\"\n                      options={allSubjects}\n                      renderInput={(params) => (\n                        <TextField\n                            // eslint-disable-next-line react/jsx-props-no-spreading\n                          {...params}\n                          label=\"Subject\"\n                          variant=\"outlined\"\n                          fullWidth\n                        />\n                      )}\n                      onChange={(_event, value) => {\n                        if (value === subjectBox) {\n                          return;\n                        }\n                        this.loadCourseNumbers(value);\n                        this.setState({\n                          subjectBox: (value || '').toUpperCase(),\n                          courseNumberBox: '',\n                        });\n                        if (value) {\n                          this.courseNumberBoxRef.current.focus();\n                        }\n                      }}\n                      value={subjectBox}\n                    />\n                    <Autocomplete\n                      className=\"margin-bottom-16\"\n                      id=\"courseNumberBox\"\n                      options={courseNumbers}\n                      getOptionLabel={(option) => option}\n                      renderInput={(params) => (\n                        <TextField\n                            // eslint-disable-next-line react/jsx-props-no-spreading\n                          {...params}\n                          label=\"Course number\"\n                          variant=\"outlined\"\n                          fullWidth\n                          inputRef={this.courseNumberBoxRef}\n                        />\n                      )}\n                      onChange={(_event, value) => {\n                        this.setState({\n                          courseNumberBox: value,\n                        });\n                      }}\n                      value={courseNumberBox}\n                    />\n                    <div className=\"flex-container\">\n                      <Box ml=\"auto\">\n                        <Button color=\"primary\" variant=\"outlined\" onClick={this.handleAddClick}>Add Course</Button>\n                      </Box>\n                    </div>\n                  </Box>\n                </Grid>\n              </Grid>\n              <Divider />\n              <Box p={2}>\n                <Button size=\"large\" variant=\"contained\" color=\"primary\" fullWidth onClick={this.handleViewScheduleClick}>View Recommended Schedules</Button>\n              </Box>\n            </Paper>\n          </Fade>\n        </Modal>\n        <Backdrop\n          style={{\n            zIndex: theme.zIndex.drawer + 1,\n            color: '#fff',\n          }}\n          open={fullPageOverlayOpen}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default WelcomePage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WelcomePage from './welcome_page/index';\n\nReactDOM.render(<WelcomePage />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/icon.47f3ae83.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar-step-1.5a0cc442.png\";","module.exports = __webpack_public_path__ + \"static/media/calendar-step-2.514203ac.png\";"],"sourceRoot":""}