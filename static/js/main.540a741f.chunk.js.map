{"version":3,"sources":["components/CourseItem/index.jsx","utils/courses.js","utils/uwapi.js","welcome_page/index.jsx","index.jsx","res/icon.svg","res/calendar-step-1.png","res/calendar-step-2.png"],"names":["CourseItem","props","courseCode","keepable","keep","onDropClick","onKeepClick","ListItem","ListItemText","primary","ListItemSecondaryAction","Hidden","xsUp","Tooltip","title","IconButton","aria-label","disabled","onClick","Lock","LockOpen","RemoveCircleOutline","getCourseCode","classInfo","subject","catalog_number","isOnline","campus","formatPostData","currentCourses","currentClasses","courseInfo","currentCoursesDict","_","keyBy","filteredCourseInfo","map","course","filtered","filter","s","classes","some","value","date","is_closed","section","includes","class_number","uniqWith","a","b","associated_class","slice","length","i","isEqual","grouped","dict","groupBy","groupedSectionList","forEach","key","courses_info","filtered_courses","other","primarySection","allowedComponents","component","allowedSections","classInfo2","isEmpty","concat","permHelper","lol","x","lst","prepend","flat","rootUrl","UWAPI","apiKey","timeout","sendUrlRequest","url","async","params","axios","get","baseURL","timeoutErrorMessage","response","data","meta","status","error","Error","message","name","sendBulkUrlRequest","urlList","instance","create","promises","getSubjectCodes","subjects","item","getCourseNumbers","courses","getCourseSchedule","catalogNumber","term","undefined","getCourseScheduleMulti","courseCodeList","code","split","sub","cata","this","uwapi","useStyles","makeStyles","theme","addCourseInput","marginBottom","spacing","backdrop","zIndex","drawer","color","currentCoursesList","overflowY","height","preferenceHeader","editCourseModal","alignItems","display","justifyContent","editCoursePaper","outline","width","flexContainer","flexDirection","flexGrow","fullHeight","header","background","logo","marginTop","marginLeft","marginRight","stepImage","paddingTop","stickBottom","stickRight","popover","pointerEvents","paper","padding","createMuiTheme","breakpoints","values","xs","sm","md","lg","xl","palette","main","blue","light","dark","PreferenceSlider","label","helpMsg","leftLabel","rightLabel","sliderValue","handleSliderValueChange","useState","anchorEl","setAnchorEl","handlePopoverClose","open","Boolean","Box","Typography","gutterBottom","className","fontWeight","aria-owns","aria-haspopup","onMouseEnter","event","currentTarget","onMouseLeave","fontSize","Popover","id","anchorOrigin","vertical","horizontal","onClose","disableRestoreFocus","style","whiteSpace","Grid","container","Slider","onChange","e","v","WelcomePage","coursesInfo","setCoursesInfo","availSubjects","setAvailSubjects","availCourseNumbers","setAvailCourseNumbers","setCurrentClasses","setCurrentCourses","editCourseModalOpen","setEditCourseModalOpen","fullPageLoading","setFullPageLoading","snackbarOpen","setSnackbarOpen","snackbarSeverity","setSnackbarSeverity","snackbarTitle","setSnackbarTitle","snackbarText","setSnackbarText","scheduleImportInput","setScheduleImportInput","addCourseSubjectInput","setAddCourseSubjectInput","addCourseNumberInput","setAddCourseNumberInput","addCourseLoading","setAddCourseLoading","firstClassSliderValue","setFirstClassSliderValue","evenDistSliderValue","setEvenDistSliderValue","clusterClassSliderValue","setClusterClassSliderValue","addCourseNumberInputRef","useRef","showSnackbar","severity","text","hideSnackbar","reason","useEffect","loadAvailSubjects","isValidSchedule","classNumbers","completeClassNumbers","flatten","obj","every","number","showScheduleInvalidAlert","parseCourses","rawCourses","match","courseNames","substring","all","then","catch","startsWith","finally","loadCourseInfo","parseInt","closeEditCourseModal","handlePaste","pasteText","showModal","ThemeProvider","CssBaseline","Snackbar","autoHideDuration","Alert","AlertTitle","src","alt","Container","maxWidth","justify","Card","raised","CardHeader","CardContent","variant","Link","href","target","CardMedia","image","step1","step2","mb","TextField","onPaste","clipboardData","getData","multiline","required","fullWidth","rows","InputProps","inputProps","Modal","BackdropComponent","Backdrop","BackdropProps","closeAfterTransition","disableBackdropClick","Fade","in","Paper","AppBar","position","elevation","Toolbar","Close","List","newCurrentCourses","newCourseInfo","dropCourse","handleKeepCourseClick","smUp","Divider","p","Autocomplete","options","renderInput","_event","courseNumbers","loadAvailCourseNumbers","toUpperCase","current","focus","getOptionLabel","option","inputRef","mx","CircularProgress","size","Math","sqrt","Button","classesInfo","push","px","fc","oneCourseCombo","preferences","post","console","log","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.540a741f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItem, ListItemText, ListItemSecondaryAction, IconButton, Tooltip, Hidden,\n} from '@material-ui/core';\nimport { RemoveCircleOutline, Lock, LockOpen } from '@material-ui/icons';\n\nfunction CourseItem(props) {\n  const {\n    courseCode, keepable, keep, onDropClick, onKeepClick,\n  } = props;\n\n  return (\n    <ListItem>\n      <ListItemText primary={courseCode} />\n      <ListItemSecondaryAction>\n        {/* TODO: Keep toggle */}\n        <Hidden xsUp={!keepable}>\n          <Tooltip\n            title={keep\n              ? 'This course will be kept unchanged in the schedule.'\n              : 'This course is allowed to be changed'}\n          >\n            <span>\n              <IconButton\n                aria-label=\"keep unchanged\"\n                disabled={!keepable}\n                onClick={onKeepClick}\n              >\n                {keep ? <Lock /> : <LockOpen />}\n              </IconButton>\n            </span>\n          </Tooltip>\n        </Hidden>\n        <Tooltip title=\"Drop this course\">\n          <IconButton aria-label=\"drop\" onClick={onDropClick}>\n            <RemoveCircleOutline />\n          </IconButton>\n        </Tooltip>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nCourseItem.propTypes = {\n  courseCode: PropTypes.string.isRequired,\n  keepable: PropTypes.bool.isRequired,\n  keep: PropTypes.bool.isRequired,\n  onDropClick: PropTypes.func.isRequired,\n  onKeepClick: PropTypes.func.isRequired,\n};\n\nexport default CourseItem;\n","import _ from 'lodash';\n\n/**\n * @typedef {{ courseCode: string, keepable: boolean, keep: boolean }} CurrentCourse\n */\n\n/**\n * @typedef {Object} ClassInfo\n * @property {string} subject\n * @property {number} catalog_number\n * @property {number} class_number\n * @property {number} associated_class\n * @property {string} section\n * @property {string} campus\n * @property {ClassTimeInfo[]} classes\n */\n\n/**\n * @typedef {Object} ClassTimeInfo\n * @property {ClassDate} date\n * @property {{building: string, room: string}} location\n * @property {string[]} instructors\n */\n\n/**\n * @typedef {Object} ClassDate\n * @property {string} start_time\n * @property {string} end_time\n * @property {string} weekdays\n * @property {boolean} is_tba\n * @property {boolean} is_cancelled\n * @property {boolean} is_closed\n */\n\n/**\n * Determines whether two classes are associated.\n * @param {ClassInfo} classInfo1 the ClassInfo object to compare.\n * @param {ClassInfo} classInfo2 the other ClassInfo object to compare.\n */\nconst areAssociated = (classInfo1, classInfo2) => (\n  classInfo1.associated_class === classInfo2.associated_class\n);\n\n/**\n * Returns the course code of a class.\n * @param {ClassInfo} classInfo the ClassInfo object to get course code from.\n */\nconst getCourseCode = (classInfo) => `${classInfo.subject} ${classInfo.catalog_number}`;\n\n/**\n * Determines whether a class in online or not.\n * @param {ClassInfo} classInfo the ClassInfo object to check.\n */\nconst isOnline = (classInfo) => classInfo.campus === 'ONLN ONLINE';\n\n/**\n * Determines whether a class in closed or not.\n * @param {ClassInfo} classInfo the ClassInfo object to check.\n */\nconst isClosed = (classInfo) => classInfo.classes.some((value) => value.date.is_closed);\n\n/**\n * Formats data for use in back-end.\n * @param {CurrentCourse[]} currentCourses the list of current courses.\n * @param {number[]} currentClasses the list of current class numbers.\n * @param {ClassInfo[][]} courseInfo the courses information obtained from API.\n */\nconst formatPostData = (currentCourses, currentClasses, courseInfo) => {\n  const currentCoursesDict = _.keyBy(currentCourses, 'courseCode');\n\n  const filteredCourseInfo = courseInfo.map((course) => {\n    let filtered = course.filter((s) => !isClosed(s) && !isOnline(s));\n    const keepUnchanged = currentCoursesDict[getCourseCode(course[0])].keep;\n    if (keepUnchanged) {\n      filtered = filtered.filter((section) => currentClasses.includes(section.class_number));\n    }\n    const filteredSet = _.uniqWith(filtered, (a, b) => {\n      if (a.associated_class !== b.associated_class) {\n        return false;\n      }\n      if (a.section.slice(0, 3) !== b.section.slice(0, 3)) {\n        return false;\n      }\n      if (a.classes.length !== b.classes.length) {\n        return false;\n      }\n      for (let i = 0; i < a.classes.length; i += 1) {\n        if (!_.isEqual(a.classes[i].date, b.classes[i].date)) {\n          return false;\n        }\n      }\n      return true;\n    });\n    return filteredSet;\n  });\n\n  const grouped = filteredCourseInfo.map((course) => {\n    const dict = _.groupBy(course, (s) => s.section[4]);\n    const groupedSectionList = [];\n    _.forEach(dict, (value, key) => {\n      groupedSectionList[key] = value;\n    });\n    return groupedSectionList;\n  });\n\n  const associatedClassList = grouped.map((course) => {\n    const primary = course[0];\n    const other = course.slice(1);\n    const rearranged = primary.map((primarySection) => {\n      const allowedComponents = other.map((component) => {\n        let allowedSections = component.filter((section) => areAssociated(primarySection, section));\n        if (_.isEmpty(allowedSections)) {\n          allowedSections = component.filter(\n            (section) => section.associated_class === 99,\n          );\n        }\n        return _.map(allowedSections, 'class_number');\n      });\n      return [[primarySection.class_number]].concat(allowedComponents);\n    });\n    return rearranged;\n  });\n\n  return {\n    courses_info: filteredCourseInfo,\n    filtered_courses: associatedClassList,\n  };\n};\n\nconst prepend = (i, lol) => lol.map((lst) => [i].concat(lst));\n\nconst permHelper = (lol) => (!lol.length\n  ? [[]] : lol[0].map((x) => prepend(x, permHelper(lol.slice(1)))).flat());\n\nconst perm = (fc) => permHelper(\n  fc.map((course) => course.map((oneCourseCombo) => permHelper(oneCourseCombo)).flat()),\n).map((x) => x.flat());\n\nexport {\n  areAssociated,\n  formatPostData,\n  getCourseCode,\n  isOnline,\n  perm,\n};\n","import axios from 'axios';\n\nconst rootUrl = 'https://api.uwaterloo.ca/v2';\n\nclass UWAPI {\n  /**\n   * Creates a new UWAPI instance.\n   * @param {string} apiKey the API key.\n   */\n  constructor(apiKey, timeout = 6000) {\n    this.apiKey = apiKey;\n    this.timeout = timeout;\n  }\n\n  /**\n   * Sends a GET request to UW Open Data API.\n   * @param {string} url the URL of the endpoint.\n   * @param {Object} params parameters to send along the request.\n   */\n  sendUrlRequest = async (url, params = {}) => {\n    const response = await axios.get(url, {\n      baseURL: rootUrl,\n      params: {\n        ...params,\n        key: this.apiKey,\n      },\n      timeout: this.timeout,\n      timeoutErrorMessage: `timeout ${this.timeout}`,\n    });\n    const { meta, data } = response.data;\n    if (meta.status !== 200) {\n      const error = Error(meta.message);\n      error.name = `UW ${meta.status}`;\n      throw error;\n    }\n    return data;\n  }\n\n  /**\n   * Sends multiple GET requests to UW Open Data API.\n   * @param {string[]} urlList the URLs of the endpoints.\n   * @param {Object} params parameters to send along each request.\n   */\n  sendBulkUrlRequest = (urlList, params = {}) => {\n    const instance = axios.create({\n      baseURL: rootUrl,\n      timeout: this.timeout,\n      timeoutErrorMessage: `timeout ${this.timeout}`,\n    });\n    const promises = urlList.map((url) => instance.get(url, {\n      params: {\n        ...params,\n        key: this.apiKey,\n      },\n    }));\n    return promises;\n  }\n\n  /**\n   * Returns all available subject codes.\n   */\n  getSubjectCodes = async () => {\n    const subjects = await this.sendUrlRequest('/codes/subjects.json');\n    return subjects.map((item) => item.subject);\n  }\n\n  /**\n   * Returns all available catalog numbers (course numbers) for a subject.\n   * @param {string} subject\n   */\n  getCourseNumbers = async (subject) => {\n    const courses = await this.sendUrlRequest(`/courses/${subject}.json`);\n    return courses.map((item) => item.catalog_number);\n  }\n\n  /**\n   * Returns the schedule of a course.\n   * @param {string} subject\n   * @param {string | number} catalogNumber\n   * @param {number} term the term to get schedules for.\n   */\n  getCourseSchedule = async (subject, catalogNumber, term = undefined) => {\n    const url = `/courses/${subject}/${catalogNumber}/schedule.json`;\n    const classes = await this.sendUrlRequest(url, { term });\n    return classes;\n  }\n\n  /**\n   * Returns the schedules of multiple courses.\n   * @param {string[]} courseCodeList the list of courses to get schedules for.\n   * @param {number} term the term to get schedules for.\n   */\n  getCourseScheduleMulti = (courseCodeList, term = undefined) => {\n    const urlList = courseCodeList.map((code) => {\n      const [sub, cata] = code.split(' ');\n      return `/courses/${sub}/${cata}/schedule.json`;\n    });\n    return this.sendBulkUrlRequest(urlList, { term });\n  }\n}\n\nexport default UWAPI;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Button, TextField, Typography, Grid, Modal, Link, List,\n  Card, CardContent, CardHeader, CardMedia, Paper, CssBaseline,\n  Divider, Snackbar, Fade, Backdrop, createMuiTheme, ThemeProvider,\n  Box, CircularProgress, Container, makeStyles, Hidden, IconButton,\n  AppBar, Toolbar, Tooltip, Slider, Popover,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { Autocomplete, Alert, AlertTitle } from '@material-ui/lab';\nimport { blue } from '@material-ui/core/colors';\nimport axios from 'axios';\nimport CourseItem from 'components/CourseItem';\nimport {\n  getCourseCode, formatPostData, isOnline, perm,\n} from 'utils/courses';\nimport UWAPI from 'utils/uwapi';\nimport logo from 'res/icon.svg';\nimport step1 from 'res/calendar-step-1.png';\nimport step2 from 'res/calendar-step-2.png';\nimport _ from 'lodash';\nimport { Close } from '@material-ui/icons';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nconst apiKey = '4ad350333dc3859b91bcf443d14e4bf0';\nconst uwapi = new UWAPI(apiKey);\n// TODO: terms\n\nconst useStyles = makeStyles((theme) => ({\n  addCourseInput: {\n    marginBottom: theme.spacing(2),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#ffffff',\n  },\n  currentCoursesList: {\n    overflowY: 'scroll',\n    height: '100%',\n  },\n  preferenceHeader: {\n    color: '#666666',\n  },\n  editCourseModal: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  editCoursePaper: {\n    outline: 'none',\n    width: 750,\n  },\n  flexContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n  fullHeight: { height: '100%' },\n  header: { background: '#f5f5f5' },\n  logo: {\n    display: 'block',\n    height: '16vmin',\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  marginLeft: { marginLeft: theme.spacing(2) },\n  stepImage: { height: 0, paddingTop: '100%' },\n  stickBottom: { marginTop: 'auto' },\n  stickRight: { marginLeft: 'auto' },\n  popover: {\n    pointerEvents: 'none',\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst theme = createMuiTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 1024,\n      lg: 1440,\n      xl: 1920,\n    },\n  },\n  palette: {\n    primary: {\n      main: blue[500],\n      light: '#6ec6ff',\n      dark: '#0069c0',\n    },\n  },\n});\n\nfunction PreferenceSlider(props) {\n  const {\n    label, helpMsg, leftLabel, rightLabel, sliderValue, handleSliderValueChange,\n  } = props;\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <Box>\n      <Typography component=\"span\" gutterBottom className={classes.preferenceHeader}>\n        <Box display=\"inline\" fontWeight=\"fontWeightMedium\">{`${label} `}</Box>\n        <Typography\n          display=\"inline\"\n          aria-owns={open ? 'mouse-over-popover' : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={handlePopoverOpen}\n          onMouseLeave={handlePopoverClose}\n        >\n          <HelpOutlineIcon\n            color=\"action\"\n            fontSize=\"small\"\n          />\n        </Typography>\n        <Popover\n          id=\"mouse-over-popover\"\n          className={classes.popover}\n          classes={{\n            paper: classes.paper,\n          }}\n          open={open}\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          onClose={handlePopoverClose}\n          disableRestoreFocus\n        >\n          <Typography style={{ whiteSpace: 'pre' }}>{helpMsg}</Typography>\n        </Popover>\n      </Typography>\n      <Grid container spacing={1}>\n        <Grid item>\n          <Typography color=\"textSecondary\">{leftLabel}</Typography>\n        </Grid>\n        <Grid item xs>\n          <Slider\n            display=\"inline\"\n            value={sliderValue}\n            onChange={(e, v) => handleSliderValueChange(e, v)}\n          />\n        </Grid>\n        <Grid item>\n          <Typography color=\"textSecondary\">{rightLabel}</Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nPreferenceSlider.propTypes = {\n  label: PropTypes.string.isRequired,\n  helpMsg: PropTypes.string.isRequired,\n  leftLabel: PropTypes.string.isRequired,\n  rightLabel: PropTypes.string.isRequired,\n  sliderValue: PropTypes.number.isRequired,\n  handleSliderValueChange: PropTypes.func.isRequired,\n};\n\nfunction WelcomePage() {\n  // Data states\n  const [coursesInfo, setCoursesInfo] = useState([]); // courseInfo\n  const [availSubjects, setAvailSubjects] = useState([]); // allSubjects\n  const [availCourseNumbers, setAvailCourseNumbers] = useState([]); // courseNumbers\n  const [currentClasses, setCurrentClasses] = useState([]);\n  const [currentCourses, setCurrentCourses] = useState([]);\n\n  // UI states\n  const [editCourseModalOpen, setEditCourseModalOpen] = useState(false); // modalShow\n  const [fullPageLoading, setFullPageLoading] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarSeverity, setSnackbarSeverity] = useState(''); // snackbarTheme\n  const [snackbarTitle, setSnackbarTitle] = useState('');\n  const [snackbarText, setSnackbarText] = useState('');\n  const [scheduleImportInput, setScheduleImportInput] = useState(''); // rawCourses\n  const [addCourseSubjectInput, setAddCourseSubjectInput] = useState(''); // subjectBox\n  const [addCourseNumberInput, setAddCourseNumberInput] = useState(''); // courseNumberBox\n  const [addCourseLoading, setAddCourseLoading] = useState(false);\n  const [firstClassSliderValue, setFirstClassSliderValue] = useState(50);\n  const [evenDistSliderValue, setEvenDistSliderValue] = useState(50);\n  const [clusterClassSliderValue, setClusterClassSliderValue] = useState(50);\n\n  // Refs\n  const addCourseNumberInputRef = useRef(); // courseNumberBoxRef\n\n  // Material UI styles\n  const classes = useStyles();\n\n\n  const showSnackbar = (severity, text, title) => {\n    setSnackbarSeverity(severity);\n    setSnackbarText(text);\n    setSnackbarTitle(title || '');\n    setSnackbarOpen(true);\n  };\n\n  const hideSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  useEffect( // componentDidMount()\n    () => {\n      const loadAvailSubjects = async () => {\n        try {\n          const subjects = await uwapi.getSubjectCodes();\n          setAvailSubjects(subjects);\n        } catch (error) {\n          showSnackbar('error', 'Unable to load courses.');\n        }\n      };\n      loadAvailSubjects();\n    },\n    [],\n  );\n\n  const isValidSchedule = (courseInfo, classNumbers) => {\n    const completeClassNumbers = _.flatten(courseInfo).map((obj) => obj.class_number);\n    return classNumbers.every((number) => completeClassNumbers.includes(number));\n  };\n\n\n  const showScheduleInvalidAlert = () => {\n    showSnackbar(\n      'warning',\n      'Please make sure it\\'s correct and try again.',\n      'Your course info cannot be read',\n    );\n  };\n\n  const loadCourseInfo = async (courseNames, classNumbers) => {\n    const promises = uwapi.getCourseScheduleMulti(courseNames);\n    setFullPageLoading(true);\n    axios.all(promises).then((values) => {\n      const courseInfo = values.map((value) => value.data.data);\n      if (isValidSchedule(courseInfo, classNumbers)) {\n        setCoursesInfo(courseInfo);\n        setCurrentCourses(courseNames.map(\n          (item) => ({ courseCode: item, keepable: true, keep: true }),\n        ));\n        setCurrentClasses(classNumbers);\n        setEditCourseModalOpen(true);\n      } else {\n        showScheduleInvalidAlert();\n      }\n    }).catch((error) => {\n      if (error.message.startsWith('timeout')) {\n        showSnackbar('error', 'Network Timeout');\n      } else {\n        showSnackbar('error', error.message);\n      }\n    }).finally(() => {\n      setScheduleImportInput('');\n      setFullPageLoading(false);\n    });\n  };\n\n  const parseCourses = (rawCourses) => {\n    const classNumbers = rawCourses.match(/^\\d{4}$/gm);\n    const courseNames = rawCourses.match(/[A-Z]{2,6} \\d{1,3}[A-Z]? - /g).map((x) => x.substring(0, x.length - 3));\n    if (rawCourses.match(/^\\d{3}$/gm).length !== classNumbers.length || rawCourses.match(/^0\\d{2}$/gm).length !== courseNames.length) {\n      showScheduleInvalidAlert();\n      return;\n    }\n    loadCourseInfo(courseNames, classNumbers.map((item) => parseInt(item, 10)));\n  };\n\n  const showModal = (rawCourses) => {\n    try {\n      parseCourses(rawCourses);\n    } catch (error) {\n      showScheduleInvalidAlert();\n    }\n  };\n\n  const closeEditCourseModal = () => {\n    setEditCourseModalOpen(false);\n    setAddCourseSubjectInput('');\n    setAddCourseNumberInput('');\n    setAvailCourseNumbers([]);\n  };\n\n  const dropCourse = (courseCode) => {\n    const newCurrentCourses = currentCourses.filter((item) => item.courseCode !== courseCode);\n    const newCourseInfo = coursesInfo.filter((item) => getCourseCode(item[0]) !== courseCode);\n    setCurrentCourses(newCurrentCourses);\n    setCoursesInfo(newCourseInfo);\n  };\n\n  const loadAvailCourseNumbers = async (subject) => {\n    if (!subject) {\n      setAvailCourseNumbers([]);\n      return;\n    }\n    try {\n      const courseNumbers = await uwapi.getCourseNumbers(subject);\n      setAvailCourseNumbers(courseNumbers);\n    } catch (error) {\n      setAvailCourseNumbers([]);\n    }\n  };\n\n  const handleKeepCourseClick = (courseCode) => {\n    const newCurrentCourses = currentCourses.map((course) => (\n      (course.courseCode === courseCode) ? { ...course, keep: !course.keep } : course\n    ));\n    setCurrentCourses(newCurrentCourses);\n  };\n\n  const handleAddClick = async () => {\n    if (!addCourseSubjectInput || !addCourseNumberInput) {\n      return;\n    }\n    setAddCourseLoading(true);\n    const courseCode = `${addCourseSubjectInput} ${addCourseNumberInput}`;\n    const newCurrentCourses = currentCourses.slice();\n    if (newCurrentCourses.some((item) => courseCode === item.courseCode)) {\n      showSnackbar('info', `${courseCode} is already in your schedule.`);\n      setAddCourseLoading(false);\n      return;\n    }\n\n    try {\n      const classesInfo = await uwapi.getCourseSchedule(\n        addCourseSubjectInput, addCourseNumberInput,\n      );\n      if (classesInfo.every(isOnline)) {\n        const error = new Error(`${courseCode} is only available online.`);\n        error.name = 'UW online';\n        throw error;\n      }\n      newCurrentCourses.push({\n        courseCode,\n        keepable: false,\n        keep: false,\n      });\n      const newCourseInfo = coursesInfo.slice();\n      newCourseInfo.push(classesInfo);\n      setCurrentCourses(newCurrentCourses);\n      setCoursesInfo(newCourseInfo);\n    } catch (error) {\n      if (error.name === 'UW 204') {\n        showSnackbar('warning', `${courseCode} is unavailable for this term.`);\n      } else if (error.name === 'UW online') {\n        showSnackbar('warning', error.message);\n      } else if (error.message.startsWith('timeout')) {\n        showSnackbar('error', 'Network Timeout');\n      } else {\n        showSnackbar('error', error.message);\n      }\n    } finally {\n      setAddCourseLoading(false);\n    }\n  };\n\n  const handleViewScheduleClick = async () => {\n    const data = formatPostData(currentCourses, currentClasses, coursesInfo);\n    if (perm(data.filtered_courses).length > 200000) {\n      showSnackbar('warning', 'Try locking some of your courses or reduce the number of courses.', 'Too many course combinations');\n      return;\n    }\n    data.preferences = [firstClassSliderValue, evenDistSliderValue, clusterClassSliderValue];\n    const url = 'https://qemn8c6rx9.execute-api.us-east-2.amazonaws.com/test/handleschedulerequest';\n    try {\n      const response = await axios.post(url, data, { timeout: 15000 });\n      console.log(response);\n    } catch (error) {\n      if (error.message.startsWith('timeout')) {\n        showSnackbar('error', 'Network Timeout');\n      } else {\n        showSnackbar('error', error.message);\n      }\n    }\n  };\n\n  const handlePaste = (pasteText) => {\n    try {\n      hideSnackbar();\n      setScheduleImportInput(pasteText);\n      showModal(pasteText);\n    } catch (error) {\n      showSnackbar('error', error.message);\n    }\n  };\n\n  const handleFirstClassSliderChange = (event, value) => setFirstClassSliderValue(value);\n\n  const handleEvenDistSliderChange = (event, value) => setEvenDistSliderValue(value);\n\n  const handleClusterClassSliderChange = (event, value) => setClusterClassSliderValue(value);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Snackbar\n        open={snackbarOpen}\n        onClose={hideSnackbar}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        autoHideDuration={4000}\n      >\n        <Alert severity={snackbarSeverity} onClose={hideSnackbar}>\n          {snackbarTitle && <AlertTitle>{snackbarTitle}</AlertTitle>}\n          {snackbarText}\n        </Alert>\n      </Snackbar>\n      <img src={logo} alt=\"Logo\" className={classes.logo} />\n\n      <Container maxWidth=\"lg\">\n        <Grid container justify=\"center\" spacing={4}>\n          <Grid item xs={12} sm={10} md>\n            <Card raised>\n              <CardHeader title=\"Step 1\" className={classes.header} />\n              <CardContent>\n                <Typography variant=\"body1\">\n                  Go to&nbsp;\n                  <Link href=\"https://quest.pecs.uwaterloo.ca/psp/SS/ACADEMIC/SA/?cmd=login&languageCd=ENG\" target=\"_blank\">Quest</Link>\n                  , click &quot;Class Schedule&quot;.\n                </Typography>\n              </CardContent>\n              <CardMedia\n                image={step1}\n                title=\"Go to Class Schedule\"\n                className={classes.stepImage}\n              />\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={10} md>\n            <Card className={`${classes.flexContainer} ${classes.fullHeight}`} raised>\n              <CardHeader title=\"Step 2\" className={classes.header} />\n              <CardContent>\n                <Typography variant=\"body1\">Select all and copy.</Typography>\n              </CardContent>\n              <CardMedia\n                image={step2}\n                title=\"Select All and Copy\"\n                className={`${classes.stepImage} ${classes.stickBottom}`}\n              />\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={10} md>\n            <Card className={`${classes.flexContainer} ${classes.fullHeight}`} raised>\n              <CardHeader title=\"Step 3\" className={classes.header} />\n              <CardContent className={`${classes.flexContainer} ${classes.flexGrow}`}>\n                <Box mb={2}>\n                  <Typography variant=\"body1\">Paste into the box below.</Typography>\n                </Box>\n                <TextField\n                  className={classes.flexGrow}\n                  value={scheduleImportInput}\n                  onPaste={(e) => handlePaste(e.clipboardData.getData('text/plain'))}\n                  multiline\n                  required\n                  variant=\"outlined\"\n                  fullWidth\n                  rows={12}\n                  InputProps={{\n                    className: classes.fullHeight,\n                  }}\n                  inputProps={{\n                    className: classes.fullHeight,\n                  }}\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <Modal\n        open={editCourseModalOpen}\n        onClose={closeEditCourseModal}\n        className={classes.editCourseModal}\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n        closeAfterTransition\n        disableBackdropClick\n      >\n        <Fade in={editCourseModalOpen}>\n          <Paper className={classes.editCoursePaper}>\n            <AppBar position=\"static\" color=\"default\" elevation={0}>\n              <Toolbar>\n                <Typography variant=\"h6\" className={classes.flexGrow}>Edit my courses</Typography>\n                <Tooltip title=\"Close\">\n                  <IconButton aria-label=\"close\" onClick={closeEditCourseModal}>\n                    <Close />\n                  </IconButton>\n                </Tooltip>\n              </Toolbar>\n            </AppBar>\n            <Grid container>\n              <Grid item xs={12} sm>\n                <List className={classes.currentCoursesList}>\n                  {currentCourses.map((item) => {\n                    const { courseCode, keepable, keep } = item;\n                    return (\n                      <CourseItem\n                        key={courseCode}\n                        courseCode={courseCode}\n                        keepable={keepable}\n                        keep={keep}\n                        onDropClick={() => dropCourse(courseCode)}\n                        onKeepClick={() => handleKeepCourseClick(courseCode)}\n                      />\n                    );\n                  })}\n                </List>\n                <Hidden smUp>\n                  <Divider />\n                </Hidden>\n              </Grid>\n              <Grid item xs={12} sm>\n                <Box p={2} display=\"flex\" flexDirection=\"column\">\n                  <Autocomplete\n                    className={classes.addCourseInput}\n                    id=\"subjectBox\"\n                    options={availSubjects}\n                    renderInput={(params) => (\n                      <TextField\n                        // eslint-disable-next-line react/jsx-props-no-spreading\n                        {...params}\n                        label=\"Subject\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    )}\n                    onChange={(_event, value) => {\n                      if (value === addCourseSubjectInput) {\n                        return;\n                      }\n                      loadAvailCourseNumbers(value);\n                      setAddCourseSubjectInput((value || '').toUpperCase());\n                      setAddCourseNumberInput('');\n                      if (value) {\n                        addCourseNumberInputRef.current.focus();\n                      }\n                    }}\n                    value={addCourseSubjectInput}\n                  />\n                  <Autocomplete\n                    className={classes.addCourseInput}\n                    id=\"courseNumberBox\"\n                    options={availCourseNumbers}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => (\n                      <TextField\n                        // eslint-disable-next-line react/jsx-props-no-spreading\n                        {...params}\n                        label=\"Course number\"\n                        variant=\"outlined\"\n                        fullWidth\n                        inputRef={addCourseNumberInputRef}\n                      />\n                    )}\n                    onChange={(_event, value) => {\n                      setAddCourseNumberInput(value);\n                    }}\n                    value={addCourseNumberInput}\n                  />\n                  <Box mx={0} display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\n                    {addCourseLoading && <CircularProgress size={36 / Math.sqrt(2)} />}\n                    <Button\n                      color=\"primary\"\n                      variant=\"outlined\"\n                      onClick={handleAddClick}\n                      className={classes.marginLeft}\n                      disabled={addCourseLoading}\n                    >\n                      Add Course\n                    </Button>\n                  </Box>\n                  <Box paddingTop={2} px={1}>\n                    <PreferenceSlider\n                      label=\"First Class\"\n                      helpMsg=\"whether you prefer to start your day early\"\n                      leftLabel=\"Early\"\n                      rightLabel=\"Late\"\n                      sliderValue={firstClassSliderValue}\n                      handleSliderValueChange={handleFirstClassSliderChange}\n                    />\n                    <PreferenceSlider\n                      label=\"Even Distribution\"\n                      helpMsg=\"whether you prefer to have approximately same number of classes everyday\"\n                      leftLabel=\"Even\"\n                      rightLabel=\"Uneven\"\n                      sliderValue={evenDistSliderValue}\n                      handleSliderValueChange={handleEvenDistSliderChange}\n                    />\n                    <PreferenceSlider\n                      label=\"Cluster Classes\"\n                      helpMsg=\"whether you prefer to have your classes back to back or separately\"\n                      leftLabel=\"Together\"\n                      rightLabel=\"Separate\"\n                      sliderValue={clusterClassSliderValue}\n                      handleSliderValueChange={handleClusterClassSliderChange}\n                    />\n                  </Box>\n                </Box>\n              </Grid>\n            </Grid>\n            <Divider />\n            <Box p={2}>\n              <Button\n                size=\"large\"\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n                onClick={handleViewScheduleClick}\n                disabled={addCourseLoading}\n              >\n                View Recommended Schedules\n              </Button>\n            </Box>\n          </Paper>\n        </Fade>\n      </Modal>\n      <Backdrop\n        className={classes.backdrop}\n        open={fullPageLoading}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </ThemeProvider>\n  );\n}\nexport default WelcomePage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WelcomePage from './welcome_page/index';\n\nReactDOM.render(<WelcomePage />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/icon.47f3ae83.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendar-step-1.5a0cc442.png\";","module.exports = __webpack_public_path__ + \"static/media/calendar-step-2.514203ac.png\";"],"sourceRoot":""}